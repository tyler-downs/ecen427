/*
 * sounds.c
 *
 *  Created on: Oct 27, 2017
 *      Author: superman
 */
#include "sounds.h"
#include <stdint.h>
#include "xac97_l.h"
#include "xparameters.h"

//#include "soundfiles/alienKilledSound.c"

extern int32_t alienKilledSound_soundData[];
extern int32_t alienKilledSound_sampleRate;
extern int32_t alienKilledSound_numSamples;

extern uint32_t tankFireSoundRate;
extern uint32_t tankFireSoundFrames;
extern uint32_t tankFireSound[];




void accessSounds()
{
	xil_printf("Sample rate: %d\n\r", alienKilledSound_soundData[0]);
}

void playAudio(Xuint32 StartAddress, Xuint32 EndAddress) {
	Xuint32 sample;
	volatile Xuint32 *sound_ptr = (Xuint32*) StartAddress;

	/** Wait for the ready signal **/
	XAC97_AwaitCodecReady(XPAR_AXI_AC97_0_BASEADDR);

	/** Clear FIFOs **/
	XAC97_ClearFifos(XPAR_AXI_AC97_0_BASEADDR);

	while( sound_ptr < (Xuint32*) EndAddress ) {
		sample = *sound_ptr;
		sound_ptr = sound_ptr + 1;
		while(XAC97_isInFIFOFull(XPAR_AXI_AC97_0_BASEADDR));
		XAC97_mSetInFifoData(XPAR_AXI_AC97_0_BASEADDR, sample);
		//XAC97_WriteFifo(BaseAddress, sample);
	}
	//clear once again
	XAC97_ClearFifos(XPAR_AXI_AC97_0_BASEADDR);
}


void init_sound()
{
	//call audio_init

	//call hard reset
	XAC97_HardReset(XPAR_AXI_AC97_0_BASEADDR);
	XAC97_InitAudio(XPAR_AXI_AC97_0_BASEADDR, 0);
	XAC97_AwaitCodecReady(XPAR_AXI_AC97_0_BASEADDR);
	//XAC97_mSetControl(AC97_ExtendedAudioStat, AC97_EXTENDED_AUDIO_CONTROL_VRA);
	//XAC97_mSetControl(AC97_PCM_DAC_Rate, tankFireSoundRate);
	XAC97_WriteReg(XPAR_AXI_AC97_0_BASEADDR, AC97_ExtendedAudioStat, AC97_EXTENDED_AUDIO_CONTROL_VRA);
	//set frequency DAC
	XAC97_WriteReg(XPAR_AXI_AC97_0_BASEADDR, AC97_PCM_DAC_Rate, tankFireSoundRate);
	//set volumes
	XAC97_WriteReg(XPAR_AXI_AC97_0_BASEADDR, AC97_PCMOutVol, AC97_VOL_MID);
	//clear FIFO
	XAC97_ClearFifos(XPAR_AXI_AC97_0_BASEADDR);
	//set control bit to cause IN_FIFO interrupts
	//XAC97_mSetControl(XPAR_AXI_AC97_0_BASEADDR, AC97_ENABLE_IN_FIFO_INTERRUPT);
	uint32_t i = 0;
	while(1)
	{
		playAudio(&tankFireSound[0], &tankFireSound[tankFireSoundFrames-1]);
		while(i < 5000000)
		{
			i++;
		}
		i = 0;
	}


}
