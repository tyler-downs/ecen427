/*
 * counters.c
 *
 *  Created on: Oct 13, 2017
 *      Author: superman
 */

#include "counters.h"

//There is one interrupt every 10ms
#define MOVE_ALIENS_COUNTER_MAX 90 //how much time passes between alien movements
#define MOVE_BULLETS_COUNTER_MAX 20 //how much time passes between moving the bullets (controls bullet speed)
#define ALIEN_EXPLODE_COUNTER_MAX 20 //how long the alien explosion stays on screen after an alien is shot
#define TANK_DEAD_COUNTER_MAX 100 //how long the tank stays dead
#define TANK_DEAD_GUISE_COUNTER_MAX 25 //time between switching between the two dead tank guises
#define TANK_MOVE_COUNTER_MAX 20 //time between moving the tank if the button is pressed (controls tank movement speed)

uint32_t moveAliensTickCtr; //Counter for when to move the aliens
u32 bulletMoveTickCtr = 0; //counter for when to advance the bullets that are on the screen
u32 alienExplodeCtr = 0; //counter for when to erase the alien explosion
u32 tankDeadCtr = 0; //counter for when to revive tank
u32 tankDeadGuiseCtr = 0; //counter for when to switch dead tank guises
u32 tankMoveCtr = 0; //counter for when to move the tank again

#define INITIAL_BULLET_WAIT_TIME 200
u32 fireNewAlienBulletMaxTime = INITIAL_BULLET_WAIT_TIME;  The time between bullets coming out will be randomized
u32 fireNewAlienBulletCtr = 0; //counter for when to move the tank again

void updateAlienTickCounter()
{
	moveAliensTickCtr++;
	if (moveAliensTickCtr > MOVE_ALIENS_COUNTER_MAX) //if it's time to move the aliens
	{
		moveAliensTickCtr = 0;
		moveAliens();
		//erode bunker blocks if necessary
		//if they've reached the bottom of the screen
			//game over
	}
}

void updateBulletMoveCounter()
{
	bulletMoveTickCtr++;
	//if the timer is expired
		//reset timer
		//if tank bullet will hit an alien on next move (there is white in the rectangle ahead)
			//kill the alien in the array
			//draw the alien explosion (and save its location)
			//erase the bullet
			//reset explosion timer
			//increment the score
			//if that was the last alien, LEVEL CLEARED!
		//else if the bullet will hit a bunker
			//erode the bunker
			//erase the bullet
		//else
			//advance the tank bullet

		//for each alien bullet on screen
			//if alien bullet will hit tank(and it's not dead already)
				//draw the dead tank
				//reset the dead tank timer and dead tank guise timer
				//disable tank movement, firing bullets (both tank bullets and alien bullets), or dying again
				//remove a life
					//if there are no 0 lives, it's game over
				//erase alien bullet

			//else if alien bullet will hit dead tank
				//erase bullet

			//else if alien bullet will hit bunker
				//erode bunker
				//erase bullet

			//else
				//advance alien bullet

}

void updateAlienExplodeCounter()
{
	alienExplodeCtr++;
	//if the timer has expired
		//erase the alien explosion
}

void updateTankDeadCounter()
{
	tankDeadCtr++;
	//if the timer has expired
		//redraw the live tank
		//reenable tank movement, bullet firing, and dying again
}

void updateTankDeadGuiseCounter()
{
	tankDeadGuiseCtr++;
	//if the tank is still dead and the timer has expired
		//switch tank guises
		//reset the tankDeadGuiseCtr.
}

void updateTankMoveCounter()
{
	if(tankMoveCtr <= TANK_MOVE_COUNTER_MAX) //if the button is not pressed, be ready to move as soon as it is. Don't want to roll over or go out of bounds
		tankMoveCtr++;
	if (tankMoveCtr > TANK_MOVE_COUNTER_MAX)
	{
		//if a move button is pressed (and only one)
			//move the tank
			//reset tankMoveCtr
	}
}

void updateAllCounters()
{

}
