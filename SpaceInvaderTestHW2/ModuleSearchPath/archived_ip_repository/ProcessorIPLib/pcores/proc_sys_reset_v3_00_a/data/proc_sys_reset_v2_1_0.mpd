#-- Copyright (c) 1995-2011 Xilinx, Inc.  All rights reserved.
#--
#-- This file contains confidential and proprietary information
#-- of Xilinx, Inc. and is protected under U.S. and
#-- international copyright and other intellectual property
#-- laws.
#--
#-- DISCLAIMER
#-- This disclaimer is not a license and does not grant any
#-- rights to the materials distributed herewith. Except as
#-- otherwise provided in a valid license issued to you by
#-- Xilinx, and to the maximum extent permitted by applicable
#-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-- (2) Xilinx shall not be liable (whether in contract or tort,
#-- including negligence, or under any other theory of
#-- liability) for any loss or damage of any kind or nature
#-- related to, arising under or in connection with these
#-- materials, including for any direct, or any indirect,
#-- special, incidental, or consequential loss or damage
#-- (including loss of data, profits, goodwill, or any type of
#-- loss or damage suffered as a result of any action brought
#-- by a third party) even if such damage or loss was
#-- reasonably foreseeable or Xilinx had been advised of the
#-- possibility of the same.
#--
#-- CRITICAL APPLICATIONS
#-- Xilinx products are not designed or intended to be fail-
#-- safe, or for use in any application requiring fail-safe
#-- performance, such as life-support or safety devices or
#-- systems, Class III medical devices, nuclear facilities,
#-- applications related to the deployment of airbags, or any
#-- other applications that could lead to death, personal
#-- injury, or severe property or environmental damage
#-- (individually and collectively, "Critical
#-- Applications"). Customer assumes the sole risk and
#-- liability of any use of Xilinx products in Critical
#-- Applications, subject only to applicable laws and
#-- regulations governing limitations on product liability.
#--
#-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-- PART OF THIS FILE AT ALL TIMES.

###################################################################
##
## Name     : proc_sys_reset
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN proc_sys_reset

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = Processor System Reset Module
OPTION LONG_DESC = Reset management module
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION, virtex7=PRE_PRODUCTION, kintex7=PRE_PRODUCTION, artix7=BETA, zynq=BETA, virtex7l=PRE_PRODUCTION, kintex7l=PRE_PRODUCTION, qvirtex5lx=PRODUCTION, qvirtex5sx=PRODUCTION, qvirtex5fx=PRODUCTION, qvirtex5tx=PRODUCTION, aartix7=BETA, artix7l=BETA)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces
BUS_INTERFACE BUS = RESETPPC0, BUS_STD = XIL_RESETPPC, BUS_TYPE = INITIATOR, ISVALID = ([xstrncmp C_FAMILY virtex2p ] || [xstrncmp C_SUBFAMILY  *fx ] )
BUS_INTERFACE BUS = RESETPPC1, BUS_STD = XIL_RESETPPC, BUS_TYPE = INITIATOR, ISVALID = (([xstrncmp C_FAMILY virtex2p ] || [xstrncmp C_SUBFAMILY  *fx ]) && (!([xstrncmp C_DEVICE *2vp4 ] || [xstrncmp C_DEVICE  *2vp7 ] || [xstrncmp C_DEVICE  *2vpx20 ] || [xstrncmp C_DEVICE  *4vfx12 ] || [xstrncmp C_DEVICE  *4vfx20 ] || [xstrncmp C_DEVICE  *5vfx30t ] || [xstrncmp C_DEVICE  *5vfx70t ])))

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SUBFAMILY = lx, DT = string, TYPE = NON_HDL
PARAMETER C_EXT_RST_WIDTH = 4, DT = integer, RANGE = (1:16)
PARAMETER C_AUX_RST_WIDTH = 4, DT = integer, RANGE = (1:16)
PARAMETER C_EXT_RESET_HIGH = 1, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity
PARAMETER C_AUX_RESET_HIGH = 1, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity
PARAMETER C_NUM_BUS_RST = 1, DT = integer, RANGE = (1:8)
PARAMETER C_NUM_PERP_RST = 1, DT = integer, RANGE = (1:16)
PARAMETER C_NUM_INTERCONNECT_ARESETN = 1, DT = integer, RANGE = (1:8)
PARAMETER C_NUM_PERP_ARESETN = 1, DT = integer, RANGE = (1:16)
PARAMETER C_FAMILY = virtex5, TYPE = NON_HDL

## Ports
PORT Slowest_sync_clk = "", DIR = I, SIGIS = CLK
PORT Ext_Reset_In = "", DIR = I, SIGIS = RST
PORT Aux_Reset_In = "", DIR = I, SIGIS = RST
PORT MB_Debug_Sys_Rst = "", DIR = I, SIGIS = RST
PORT Core_Reset_Req_0 = Core_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST
PORT Chip_Reset_Req_0 = Chip_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST
PORT System_Reset_Req_0 = System_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST
PORT Core_Reset_Req_1 = Core_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST
PORT Chip_Reset_Req_1 = Chip_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST
PORT System_Reset_Req_1 = System_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST
PORT Dcm_locked = "", DIR = I, ASSIGNMENT = REQUIRE
PORT RstcPPCresetcore_0 = RstcPPCresetcore, DIR = O, BUS = RESETPPC0, SIGIS = RST
PORT RstcPPCresetchip_0 = RstsPPCresetchip, DIR = O, BUS = RESETPPC0, SIGIS = RST
PORT RstcPPCresetsys_0 = RstcPPCresetsys, DIR = O, BUS = RESETPPC0, SIGIS = RST
PORT RstcPPCresetcore_1 = RstcPPCresetcore, DIR = O, BUS = RESETPPC1, SIGIS = RST
PORT RstcPPCresetchip_1 = RstsPPCresetchip, DIR = O, BUS = RESETPPC1, SIGIS = RST
PORT RstcPPCresetsys_1 = RstcPPCresetsys, DIR = O, BUS = RESETPPC1, SIGIS = RST
PORT MB_Reset = "", DIR = O, SIGIS = RST
PORT Bus_Struct_Reset = "", DIR = O, VEC = [0:C_NUM_BUS_RST-1], SIGIS = RST
PORT Peripheral_Reset = "", DIR = O, VEC = [0:C_NUM_PERP_RST-1], SIGIS = RST
PORT Interconnect_aresetn = "", DIR = O, VEC = [0:C_NUM_INTERCONNECT_ARESETN-1], SIGIS = RST
PORT Peripheral_aresetn = "", DIR = O, VEC = [0:C_NUM_PERP_ARESETN-1], SIGIS = RST

END
